$table-padding: 0.5rem;
$normal-line-height: 24px;
$small-line-height: 14px;
$large-line-height: 29px;
$compact-line-height: 12px;
$sticky-negative-margin: -32px;

@mixin table {
	font-family: inherit;
	width: 100%;
	border-collapse: collapse;

	&--scroll-x {
		min-width: 100%;
		white-space: nowrap;
		width: max-content; // This ensures the table takes full width of its content
		table-layout: auto; // Allow natural column sizing
		
		th, td {
			white-space: nowrap;
			min-width: 120px; // Force minimum width for each column
			max-width: none;
			padding: $table-padding;
		}
	}

	&--sticky-columns {
		&.table--scroll-x {
			min-width: 100%;
			
			th, td {
				white-space: nowrap;
				min-width: max-content;
			}
		}
	}

	&--cell--sticky {
		position: sticky;
		// No default background color or border styles
		// Only last sticky column gets border via JavaScript
		
		// Ensure hover effects still work on sticky cells
		&:hover {
			background-color: inherit; // Inherit from parent hover state
		}
	}

	&--fixed-cells {
		table-layout: fixed !important;
		width: 100%;
		overflow: hidden;
		overflow-x: auto;
		overflow-y: hidden;
		white-space: nowrap;
	}

    &--head {
        background-color: var(--ar-light-color);
        &--flush {
            background-color: transparent;
        }
        th,
        td {
            font-weight: 700;
            letter-spacing: 0.1em;
            text-transform: uppercase;
            color: var(--ar-text-color);
            font-size: 0.7rem;
            text-transform: uppercase;
            padding: $table-padding;
            text-align: left;
        }

        // Add sortable cell styling
        &--cell {
            position: relative;
            
            &--sortable {
                cursor: pointer;
                padding-right: 1.5rem; // Add space for the caret
                &:hover {
					background-color: var(--ar-accent-color-subtle);
				}
                // Default state - no visible caret, but maintain space
                &:after {
                    content: "";
                    position: absolute;
                    right: 0.5rem;
                    top: 50%;
                    transform: translateY(-50%);
                    width: 0;
                    height: 0;
                    border-left: 5px solid transparent;
                    border-right: 5px solid transparent;
                    opacity: 0.3;
                }

                // Ascending order - up caret
                &[data-cell-sort-order="asc"]:after {
                    content: "";
                    opacity: 1;
                    border-bottom: 5px solid var(--ar-primary-color, #333);
                    border-top: 0;
                }

                // Descending order - down caret
                &[data-cell-sort-order="desc"]:after {
                    content: "";
                    opacity: 1;
                    border-top: 5px solid var(--ar-primary-color, #333);
                    border-bottom: 0;
                }

				// Background color for the header
                &[data-cell-sort-order="asc"], &[data-cell-sort-order="desc"] {
					background-color: var(--ar-secondary-color);
                }


                // Hover effect
                &:hover:after {
                    opacity: 0.7;
                }
            }
        }
    }
	&--body {
		td {
			padding: $table-padding;
			text-align: left;
			color: var(--ar-text-color-subtle);
		}
	}
	&--border {
		&--inline {
			tr {
				border-bottom: 1px solid var(--ar-border-color);
			}
		}
		&--full {
			border: 1px solid var(--ar-border-color);
			tr {
				border-bottom: 1px solid var(--ar-border-color);
			}
		}
		&--none {
			border: none;
			tr {
				border-bottom: none;
			}
		}
	}
	&--stripe {
		tr:nth-child(even) {
			background-color: var(--ar-light-color);
		}
	}
	&--header-type-static {
		thead {
			position: sticky;
			top: 0;
			z-index: 200; // Very high z-index to ensure it stays above everything
			background-color: var(--ar-light-color);
			&.table--head--flush {
				background-color: #fff;
			}
		}
		
		// Ensure sticky column headers in static tables have even higher z-index
		&.table--sticky-columns {
			th.table--cell--sticky {
				z-index: 300 !important; // Highest z-index for sticky headers in static tables
			}
		}
	}
	&--header-type-sticky {
		thead {
			position: sticky;
			top: $sticky-negative-margin;
			z-index: 2;
			background-color: var(--ar-light-color);
			&.table--head--flush {
				background-color: #fff;
			}
		}
		.table {
			overflow: hidden;
			margin-top: 0;
			padding-top: 0;
			table-layout: fixed; // Ensure consistent table layout
			width: 100%;
			display: table; // Use table display to maintain table structure
		}
		tbody {
			display: block;
			overflow-y: auto;
			width: 100%;
			display: table-row-group; // Use table-row-group to maintain table structure
		}
		th,
		td {
			padding: $table-padding;
			overflow: hidden; // Prevent content from breaking alignment
			text-overflow: ellipsis; // Handle overflow with ellipsis if needed
			white-space: nowrap; // Keeps text on one line (remove if you want wrapping)
			display: table-cell; // Use table-cell to maintain table structure
			min-width: 0; // Allow columns to adjust based on content
		}
		tr {
			display: table-row; // Use table-row to maintain table structure
			width: 100%;
		}
	}
	&--size--normal {
		font-size: 0.85rem;
		line-height: $normal-line-height;
	}
	&--size--small {
		font-size: 0.75rem;
		line-height: $small-line-height;
	}
	&--size--large {
		font-size: 1rem;
		line-height: $large-line-height;
	}
	&--size--compact {
		font-size: 0.75rem;
		line-height: $compact-line-height;
	}
	&--hover {
		tr:hover {
			background-color: var(--ar-light-color);
		}
	}
	&--row-cursor {
		td {
			cursor: pointer;
		}
	}
	// &--cursor {
	// 	td {
	// 		cursor: pointer;
	// 	}
	// }
}

.table {
	@include table;
}

.table-container {
	@include table;
	width: 100%;
	
	&--scroll-x {
		overflow-x: auto;
		overflow-y: auto;
		width: 100%;
		
		.table {
			width: max-content;
			min-width: 100%;
		}
	}
}

.table-wrapper--scroll-x {
	overflow-x: auto;
	width: 100%;
	
	.table {
		width: max-content;
		min-width: 100%;
	}
}
